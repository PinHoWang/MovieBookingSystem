{"version":3,"sources":["Services/Auth_header.js","Services/Movie_service.js","Components/Movie.js","Components/MoviePage.js","Services/Auth_service.js","Components/TheaterPage.js","Components/MainPage.js","Components/SignInPage.js","Components/RegisterPage.js","Components/BookingPage.js","Services/User_service.js","Components/Profile.js","Components/CreditCard.js","Components/PaymentPage.js","App.js","serviceWorker.js","index.js"],"names":["authHeader","tokenObj","JSON","parse","localStorage","getItem","console","log","token","API_URL","axios","get","then","res","data","catch","err","thId","headers","movieId","filmSessionId","ticket","movie","post","Movie","props","state","theater","movieDetails","undefined","MovieService","getMovieDetails","this","filmId","setState","Card","style","width","Body","Title","name","description","genre","cast","to","pathname","Button","Component","MoviePage","location","moviesList","movieDate","handleSelectDate","bind","getMovieByTheatreId","theatreId","e","target","value","className","Container","Row","map","key","username","password","response","setItem","stringify","removeItem","login","TheaterPage","currentUser","match","params","theaters","AuthService","getCurrentUser","getTheaters","filter","parseInt","tt","city","address","MainPage","src","alt","required","role","SignInPage","handleLogin","onChangeUsername","onChangePassword","loading","message","preventDefault","form","validateAll","checkBtn","context","_errors","length","history","push","alert","window","reload","onSubmit","ref","c","htmlFor","type","onChange","validations","disabled","display","vusername","isEmail","vpassword","RegisterPage","handleRegister","successful","register","error","BookingPage","rawMovieDetail","movieDetail","dateDict","timeDict","selectDate","selectTime","selectHall","currentMovie","finalMovie","seats","selectSeats","createMovieSet","constructDateTimeObject","handleSelectTime","handleSelectSeat","filterOutMovie","handleSelectHall","theatreFilteredMovie","dateMap","dateDest","timeMap","timeDest","i","filmDate","j","dj","id","filmTiming","k","djj","time","filteredMovie","getMovieLayout","Object","keys","date","index","hallId","hallName","seat","seatNumber","fname","lname","firstName","lastName","cardNumber","eMonth","eYear","creditCardNumber","expiryMonth","expiryYear","cvc","Profile","isProfile","handleSubmit","onChangeFirstName","onChangeLastName","user","UserService","getProfile","getHistory","saveProfile","Form","Col","Control","placeholder","h","transactionId","filmName","theatreName","totalPrice","CreditCard","expiry","isloading","handleCardNumberChange","handleCardExpiryChange","handleCardCVCChange","handleCardSubmit","number","replace","eMon","split","addPayment","cardNumberInputProps","cardExpiryInputProps","cardCVCInputProps","fieldClassName","PaymentPage","handlePaying","bookTickets","rowIndex","price","href","onClick","App","logout","DropdownButton","title","Dropdown","Item","logOut","exact","path","render","component","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.620d5c9e.chunk.js","sourcesContent":["\r\nexport default function authHeader() {\r\n    const tokenObj = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (tokenObj) {\r\n        console.log(tokenObj.token);\r\n        return tokenObj.token\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}","\r\nimport axios from 'axios';\r\nimport authHeader from './Auth_header'\r\n\r\nconst API_URL = 'http://localhost:8080/';\r\n// const API_URL = 'https://aa89f0d6-50e6-49f6-b956-fe68eb78bc12.mock.pstmn.io/';\r\n\r\nclass MovieService {\r\n\r\n\r\n    /* /theatres GET: Get list of all theatres stored in db */\r\n    async getTheaters() {\r\n\r\n        return axios.get(API_URL + 'theatres')\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                return res.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n    /* /movies GET: Get list of all the movies stored in the db */\r\n    getAllMovies() {\r\n        // console.log(authHeader());\r\n\r\n        return axios.get(API_URL + 'movies')\r\n            .then(res => {\r\n                console.log(res);\r\n                return res.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n    getMovieByTheatreId(thId) {\r\n        \r\n        // console.log(thId);\r\n        // console.log('Bearer ' + authHeader())\r\n\r\n        return axios.get(API_URL + 'moviesFromTheatre/' + thId, \r\n            {headers: {\r\n                    'Authorization': 'Bearer ' + authHeader(),\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json', } })\r\n            .then(res => {\r\n            // console.log(res.data);\r\n            return res.data;\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n        \r\n    \r\n\r\n    /* /showDetailsFromMovie GET: Get which theatres and timings of a particular movie. Pass movieId as input */\r\n    async getMovieDetails(movieId) {\r\n        // console.log(movieId);\r\n        return axios.get(API_URL + 'showDetailsFromMovie/' + movieId, { headers: { 'Authorization': 'Bearer ' + authHeader() } })\r\n            .then(res => {\r\n                // console.log(res);\r\n                return res.data;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    /* /getMovieLayout GET: Get available(unbooked) seats of a particular show by passing the above show details as input */\r\n    async getMovieLayout(filmSessionId) {\r\n        return axios.get(API_URL + 'getMovieLayout/' + filmSessionId, { headers: { 'Authorization': 'Bearer ' + authHeader() } })\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n            .catch(err => console.log(err))\r\n            \r\n    }\r\n\r\n    \r\n\r\n    /* /bookTickets POST: book tickets by passing seat array in input and film session id in URL.\r\n    Here the seats will get booked and the user will get charged using credit card. Also the transaction will be returned in output */\r\n    bookTickets(ticket, movie) {\r\n        console.log(ticket)\r\n        return axios.post(API_URL + 'bookTickets/' + movie.filmSessionId, ticket, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + authHeader(),\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res.data);\r\n            return res.data;\r\n        });\r\n    }\r\n}\r\n\r\nexport default new MovieService();\r\n","import React, { Component } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MovieService from '../Services/Movie_service'\r\n\r\nclass Movie extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movie: props.movie,\r\n            theater: props.theater,\r\n            movieDetails: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        MovieService.getMovieDetails(this.state.movie.filmId)\r\n            .then(res => {\r\n                this.setState({\r\n                    movieDetails: res.data\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        const { movie, movieDetails, theater } = this.state;\r\n        console.log(movieDetails);\r\n        return (\r\n            <div>\r\n            <Card style={{ width: '18rem' }}>\r\n                {/* <Card.Img variant=\"top\" src={\"images/\" + movie.imageName} alt=\"movie-photo\" /> */}\r\n                <Card.Body>\r\n                    <Card.Title>{movie.name}</Card.Title>\r\n                </Card.Body>\r\n                    {movie.description}<br /><br />\r\n                    {movie.genre}<br /><br />\r\n                    {movie.cast}<br /><br />\r\n                    <Link to={{\r\n                        pathname: '/bookingPage',\r\n                        state: {\r\n                            movie: movie,\r\n                            theater: theater\r\n                        }\r\n                    }}><Button>Book</Button></Link>\r\n            </Card>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Movie;\r\n","\r\nimport React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\nimport MovieService from '../Services/Movie_service';\r\n\r\nimport Movie from './Movie';\r\n\r\nclass MoviePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            theater: props.location.state.theater,\r\n            moviesList: undefined,\r\n            movieDate: undefined\r\n        }\r\n\r\n        this.handleSelectDate = this.handleSelectDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.state.theater.theatreId)\r\n        MovieService.getMovieByTheatreId(this.state.theater.theatreId)\r\n            .then(res => {\r\n                this.setState({\r\n                    moviesList: res\r\n                })\r\n            })\r\n\r\n        \r\n        \r\n    }\r\n\r\n    handleSelectDate(e) {\r\n        this.setState({\r\n            movieDate: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // const { moviesList, theater, movieDate } = this.state;\r\n        const { moviesList, theater} = this.state;\r\n        // console.log(moviesList)\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>{theater.name}</h1>\r\n                </div>\r\n                <div className=\"my-movie\">\r\n                    {/* <label>choose the time:\r\n                        <select value={this.state.movieDate} onChange={this.handleSelectDate}>\r\n                            <option value=\"\">Select Time</option>\r\n                            <option value=\"Apr 20\">Apr 20</option>\r\n                            <option value=\"Apr 21\">Apr 21</option>\r\n                            <option value=\"Apr 22\">Apr 22</option>\r\n                        </select>\r\n                    </label> */}\r\n                    <Container>\r\n                        <Row >\r\n                            {\r\n                                moviesList &&\r\n                                // moviesList.filter(movie => (movie.theatreId === this.state.theater.theatreId))\r\n                                moviesList.map(movie => (\r\n                                    <div className=\"movieCard\" key={movie.filmId}>\r\n                                            <Movie\r\n                                                movie={movie}\r\n                                                theater={theater}\r\n                                            />\r\n                                        </div>\r\n                                    ))\r\n                            }\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MoviePage;\r\n\r\n\r\n","import axios from 'axios';\r\n// import authHeader from './Auth_header';\r\n\r\n// const API_URL = 'https://cors-anywhere.herokuapp.com/http://localhost:8080/';\r\nconst API_URL = 'http://localhost:8080/';\r\n\r\nclass AuthService {\r\n    // not sure about the token of response data\r\n    // just temporarily named it as 'accessToken'\r\n    login(username, password) {\r\n        return axios\r\n            .post(API_URL + \"authenticate\", {\r\n                username,\r\n                password\r\n            },\r\n            )\r\n            .then(response => {\r\n                console.log(response.data)\r\n                if (response.data) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                }\r\n\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"isCC\");\r\n    }\r\n\r\n    register(username, password) {\r\n        return axios.post(API_URL + \"register\", {\r\n            username,\r\n            password\r\n        }, {\r\n            headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\"}\r\n        })\r\n        .then(res => {\r\n            this.login(username, password);\r\n            console.log(res.data)\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem(\"user\"));\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n\r\nimport MovieService from '../Services/Movie_service'\r\nimport AuthService from '../Services/Auth_service'\r\n\r\nclass TheaterPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: undefined,\r\n            theatreId: props.match.params.theatreId,\r\n            theaters: undefined\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if(user) {\r\n            this.setState({\r\n                currentUser: AuthService.getCurrentUser()\r\n            })\r\n        }\r\n\r\n        MovieService.getTheaters()\r\n            .then(res => {\r\n                this.setState({\r\n                    theaters: res\r\n                });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.theaters)\r\n        // console.log(\"Theater Id: \" + this.state.theatreId)\r\n        // console.log(this.state.currentUser)\r\n        return (\r\n            <div>\r\n                { this.state.theaters &&\r\n                    this.state.theaters.filter(theater => theater.theatreId === parseInt(this.state.theatreId))\r\n                        .map(tt => (\r\n                            <div key={tt.theatreId}>\r\n                            <div>\r\n                                    <h1>{tt.name}</h1><br/>\r\n                                {tt.city}<br/>\r\n                                {tt.address}<br/>\r\n                            </div>\r\n                            {\r\n                                <div className=\"booking-button\">\r\n                                {\r\n                                (!this.state.currentUser) ? (\r\n                                    <Link to=\"/login\">\r\n                                        <Button>Login to Book</Button>\r\n                                    </Link>) :\r\n                                (<Link to={{\r\n                                    pathname: '/movies',\r\n                                    state: {\r\n                                        theater: tt\r\n                                    }\r\n                                    }}> <Button>Get Tickets</Button></Link>\r\n                                    \r\n                                )\r\n                                }\r\n                                </div>\r\n                            }\r\n                            </div>\r\n                        ))\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TheaterPage;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass MainPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img className=\"mainpage-backgournd\" src='images/theater.jpg' alt='movie theater'></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MainPage;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from '../Services/Auth_service';\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n}; \r\n\r\nclass SignInPage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            loading: true\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.login(this.state.username, this.state.password)\r\n                .then(\r\n                    res => {\r\n                        this.setState({\r\n                            message: \"Successful Sign in\",\r\n                            loading: false\r\n                        });\r\n                        this.props.history.push(\"/\");\r\n                        alert(\"Succesfully Sign In!\")\r\n                        window.location.reload();\r\n                    },\r\n                    err => {\r\n                            this.setState({\r\n                                message: \"Wrong email or password\",\r\n                                loading: false\r\n                            })\r\n                        \r\n                    }\r\n                )\r\n                \r\n            // AuthService.login(this.state.username, this.state.password);\r\n            // this.props.history.push(\"/\");\r\n            // window.location.reload();\r\n        } else {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        console.log(this.state.message);\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img\r\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n\r\n                    <Form\r\n                        onSubmit={this.handleLogin}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChangeUsername}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangePassword}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button\r\n                                className=\"btn btn-primary btn-block\"\r\n                                disabled={this.state.loading}\r\n                            >\r\n                                {this.state.loading && (\r\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                )}\r\n                                <span>Login</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\">\r\n                                    {this.state.message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <CheckButton\r\n                            style={{ display: \"none\" }}\r\n                            ref={c => {\r\n                                this.checkBtn = c;\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SignInPage;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from '../Services/Auth_service';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vusername = value => {\r\n    if (!isEmail(value)) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        console.log(\"In constructer\")\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.password\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: \"Successful Registered\",\r\n                        successful: true\r\n                    });\r\n\r\n                    this.props.history.push(\"/\");\r\n                    alert(this.state.message);\r\n                    window.location.reload();\r\n                },\r\n                error => {\r\n                    console.log(\"In error\")\r\n                    var resMessage = \"\";\r\n                    \r\n                    resMessage = \"User already exist!\"\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.successful)\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img\r\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n\r\n                    <Form\r\n                        onSubmit={this.handleRegister}\r\n                        ref={c => {\r\n                            this.form = c;\r\n                        }}\r\n                    >\r\n                        {!this.state.successful && (\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Username</label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        validations={[required, vusername]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                        validations={[required, vpassword]}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {this.state.message && (\r\n                            <div className=\"form-group\">\r\n                                <div className={\r\n                                        this.state.successful\r\n                                            ? \"alert alert-success\"\r\n                                            : \"alert alert-danger\"\r\n                                    }\r\n                                    role=\"alert\"\r\n                                >\r\n                                    {this.state.message}\r\n                                    {console.log(this.state.message)}\r\n                                </div>\r\n                                {this.state.successful ? <Link to='/'>Back To Main Page</Link> : <div></div>}\r\n                            </div>\r\n                        )}\r\n                        <CheckButton\r\n                            style={{ display: \"none\" }}\r\n                            ref={c => {\r\n                                this.checkBtn = c;\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default RegisterPage;\r\n","import React, { Component } from 'react';\r\nimport MovieService from '../Services/Movie_service';\r\nimport AuthService from '../Services/Auth_service';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass BookingPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: AuthService.getCurrentUser(),\r\n            movie: props.location.state.movie,\r\n            theater: props.location.state.theater,\r\n\r\n            rawMovieDetail: undefined,\r\n            movieDetail: undefined,\r\n            dateDict: undefined,\r\n            timeDict: undefined,\r\n            selectDate: \"\",\r\n            selectTime: \"\",\r\n            selectHall: \"\",\r\n            currentMovie: undefined,\r\n            finalMovie: undefined,\r\n            seats: [],\r\n            selectSeats: undefined\r\n\r\n        }\r\n\r\n        // console.log(this.state.movie);\r\n        this.createMovieSet = this.createMovieSet.bind(this);\r\n        this.constructDateTimeObject = this.constructDateTimeObject.bind(this);\r\n        this.handleSelectDate = this.handleSelectDate.bind(this);\r\n        this.handleSelectTime = this.handleSelectTime.bind(this);\r\n        this.handleSelectSeat = this.handleSelectSeat.bind(this);\r\n        this.filterOutMovie = this.filterOutMovie.bind(this);\r\n        this.handleSelectHall = this.handleSelectHall.bind(this);\r\n\r\n        // console.log(this.state.movie);\r\n\r\n    }\r\n\r\n    createMovieSet() {\r\n        console.log(\"in createMovieSet\")\r\n\r\n        MovieService.getMovieDetails(this.state.movie.filmId)\r\n            .then(res => {\r\n                this.setState({\r\n                    rawMovieDetail: res\r\n                })\r\n            })\r\n            .then(() => {\r\n                var theatreFilteredMovie = this.state.rawMovieDetail.filter(movie => {\r\n                    return movie.theatreId === this.state.theater.theatreId\r\n                });\r\n\r\n                this.setState({\r\n                    movieDetail: theatreFilteredMovie\r\n                })\r\n            })\r\n            .then(() => {\r\n                console.log(this.state.movieDetail);\r\n                this.constructDateTimeObject()\r\n            });\r\n    }\r\n\r\n    constructDateTimeObject() {\r\n        var dateMap = {}, dateDest = [];\r\n        var timeMap = {}, timeDest = [];\r\n        for (var i = 0; i < this.state.movieDetail.length; i++) {\r\n            var movie = this.state.movieDetail[i];\r\n            // construct date dict\r\n            if (!dateMap[movie.filmDate]) {\r\n                // create a new json object\r\n                dateDest.push({\r\n                    id: movie.filmDate,\r\n                    data: [movie]\r\n                });\r\n                dateMap[movie.filmDate] = movie;\r\n            }\r\n            else {\r\n                for (var j = 0; j < dateDest.length; j++) {\r\n                    var dj = dateDest[j];\r\n                    if (dj.filmDate === movie.filmDate) {\r\n                        dj.data.push(movie);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // construct time dict\r\n            if (!timeMap[movie.filmTiming]) {\r\n                timeDest.push({\r\n                    id: movie.filmTiming,\r\n                    data: [movie]\r\n                });\r\n                timeMap[movie.filmTiming] = movie;\r\n            }\r\n            else {\r\n                for(var k = 0; k < timeDest.length; k++) {\r\n                    var djj = timeDest[k];\r\n                    if(djj.filmTiming === movie.filmTiming) {\r\n                        djj.data.push(movie);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            dateDict: dateMap,\r\n            timeDict: timeMap\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // need to get the dates and times\r\n        // Get the movies details with the currently theatre\r\n        // console.log(\"In componentDidMount\");\r\n        this.createMovieSet();\r\n    }\r\n\r\n\r\n\r\n    handleSelectDate(e) {\r\n        this.setState({\r\n            selectDate: e.target.value\r\n        })\r\n\r\n        if(e.target.value === \"none\") {\r\n            this.setState({\r\n                selectTime: \"\",\r\n                selectHall: \"\",\r\n                selectSeats: undefined\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSelectTime(e) {\r\n        this.setState({\r\n            selectTime: e.target.value\r\n        })\r\n\r\n        var time = e.target.value\r\n        \r\n        if(this.state.selectDate !== \"\" && this.state.selectDate !== \"none\" &&\r\n            time !== \"\" && time !== \"none\") {\r\n            this.filterOutMovie(time);\r\n        }\r\n\r\n        if(e.target.value === \"none\") {\r\n            this.setState({\r\n                selectHall: \"\",\r\n                selectSeats: undefined\r\n            })\r\n        }\r\n    }\r\n\r\n    filterOutMovie(time) {\r\n        // console.log(\"In filteroutmovie\")\r\n        // console.log(time)\r\n        // console.log(\"date: \" + this.state.selectDate);\r\n        // console.log(\"time: \" + this.state.selectTime);\r\n        const filteredMovie = this.state.movieDetail.filter(movie => (\r\n            (movie.filmDate === this.state.selectDate) &&\r\n            (movie.filmTiming === time)\r\n        ));\r\n        \r\n        this.setState({\r\n            currentMovie: filteredMovie\r\n        })\r\n    }\r\n\r\n    handleSelectHall(e) {\r\n        this.setState({\r\n            finalMovie: this.state.currentMovie[e.target.value],\r\n            selectHall: e.target.value\r\n        })\r\n\r\n        // console.log(this.state.currentMovie[e.target.value]);\r\n        MovieService.getMovieLayout(this.state.currentMovie[e.target.value].filmSessionId)\r\n            .then(res => {\r\n                this.setState({\r\n                    seats: res\r\n                })\r\n            })\r\n\r\n        if(e.target.value === \"none\") {\r\n            this.setState({\r\n                selectSeats: undefined\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSelectSeat(e) {\r\n        this.setState({\r\n            selectSeats: this.state.seats[e.target.value]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { dateDict, timeDict, selectDate, selectTime, selectHall} = this.state;\r\n        // console.log(this.state.finalMovie);\r\n        // console.log(\"date: \" + selectDate);\r\n        // console.log(\"time: \" + selectTime);\r\n        // console.log(\"hall: \" + selectHall);\r\n        // console.log(this.state.finalMovie);\r\n        console.log(this.state.selectSeats);\r\n        console.log(this.state.finalMovie)\r\n        return (\r\n            <div>\r\n                <p>Select the Date:</p>\r\n                <select name=\"selectDate\" onChange={this.handleSelectDate}>\r\n                    <option key=\"none\" value=\"none\">Select Date</option>\r\n                    {\r\n                        \r\n                        dateDict &&\r\n                        Object.keys(dateDict).map(date => (\r\n                            <option key={date} value={date}>{date}</option>\r\n                        ))\r\n                        \r\n                    }\r\n                    \r\n                </select>\r\n                {\r\n                    (!selectDate || selectDate === \"\" || selectDate === \"none\") ? (\r\n                        <div></div>\r\n                    ) : (<div>                            \r\n                        <p>Select the Time:</p>\r\n                        <select name=\"selectTime\" onChange={this.handleSelectTime}>\r\n                            <option key=\"none\" value=\"none\">Select Date</option>\r\n                            {\r\n                                timeDict &&\r\n                                Object.keys(timeDict).map(time => (\r\n                                    <option key={time} value={timeDict.time}>{time}</option>\r\n                                ))\r\n\r\n                            }\r\n\r\n                        </select></div>)\r\n                }\r\n\r\n                {\r\n                    (selectDate === \"\" || selectTime === \"\" || selectDate === \"none\" || selectTime === \"none\") ? (\r\n                        <div></div>\r\n                    ) : (\r\n                        \r\n                        <div>\r\n                            <p>Select the Hall:</p>\r\n                            <select name=\"selectHall\" onChange={this.handleSelectHall}>\r\n                                <option key=\"none\" value=\"none\">Select Hall</option>\r\n                                {\r\n                                   this.state.currentMovie.map((movie, index) => (\r\n                                       <option key={movie.hallId} value={index}>{movie.hallName}</option>\r\n                                   ))\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    (this.state.finalMovie && selectDate !== \"none\" && selectTime !== \"none\" && selectHall !== \"\") &&\r\n                    (\r\n                        <div>\r\n                        <p>Select the Seats:</p>\r\n                       <select name=\"selectSeat\" onChange={this.handleSelectSeat}>\r\n                           <option key=\"none\" value={undefined}>Select Seat</option>\r\n                           {\r\n                                this.state.seats.map((seat, index) => (\r\n                                    // <input type=\"checkbox\" onChange={this.handleSelectSeat}>{seat.seatNumber}</input>\r\n                                    <option key={seat.seatNumber} value={index}>{seat.seatNumber}</option>\r\n                                ))\r\n                           }\r\n                       </select><br/>\r\n                       </div>\r\n                       \r\n                    )\r\n                }\r\n                {\r\n                    this.state.selectSeats &&\r\n                    <Link to={{\r\n                        pathname: '/paymentPage',\r\n                        state: {\r\n                            ticket: this.state.selectSeats,\r\n                            movie: this.state.finalMovie\r\n                        }\r\n                   }}\r\n                    >\r\n                       <Button>Confirm</Button>\r\n                   </Link>\r\n                }\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default BookingPage;\r\n ","\r\nimport axios from 'axios';\r\nimport authHeader from './Auth_header';\r\n\r\nconst API_URL = 'http://localhost:8080/';\r\n\r\nclass UserService {\r\n    \r\n    getProfile() {\r\n        console.log(\"In getProfile\")\r\n        return axios.get(API_URL + 'profile', {headers: {'Authorization': 'Bearer ' + authHeader()}});\r\n    }\r\n\r\n    saveProfile(fname, lname) {\r\n        console.log(\"in saveProfil\")\r\n        return axios.post(API_URL + 'profile', {\r\n            firstName: fname,\r\n            lastName: lname\r\n        }, { headers: { 'Authorization': 'Bearer ' + authHeader()}})\r\n        .then(res => {\r\n            console.log(res.data)\r\n            return res.data\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n            \r\n    }\r\n    \r\n    addPayment(cardNumber, eMonth, eYear, c) {\r\n        \r\n\r\n        console.log({creditCardNumber: cardNumber,\r\n            expiryMonth: eMonth,\r\n            expiryYear: eYear,\r\n            cvc: c});\r\n        \r\n        return axios.post(API_URL + 'addPayment', {\r\n            creditCardNumber: cardNumber,\r\n            expiryMonth: eMonth,\r\n            expiryYear: eYear,\r\n            cvc: c\r\n        }, {\r\n            headers: { 'Authorization': 'Bearer ' + authHeader() }\r\n        }).then(res => {\r\n            localStorage.setItem(\"isCC\", true);\r\n            return res.data;\r\n        });\r\n    }\r\n\r\n    getHistory() {\r\n        return axios.get(API_URL + 'history', { headers: { 'Authorization': 'Bearer ' + authHeader() } })\r\n            .then(res => {\r\n                return res.data\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\nimport AuthService from \"../Services/Auth_service\"\r\nimport UserService from \"../Services/User_service\";\r\n\r\nimport {Link } from \"react-router-dom\";\r\n\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: undefined,\r\n            isProfile: false,\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            history: undefined\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = AuthService.getCurrentUser();\r\n        console.log(user);\r\n        if (user) {\r\n            this.setState({\r\n                currentUser: user\r\n            })\r\n        }\r\n\r\n        UserService.getProfile()\r\n            .then(res => {\r\n                this.setState({\r\n                    firstName: res.data.firstName,\r\n                    lastName: res.data.lastName,\r\n                    isProfile: true\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message);\r\n            })\r\n\r\n\r\n        UserService.getHistory()\r\n            .then(res => {\r\n                this.setState({\r\n                    \r\n                    history: res\r\n                })\r\n            })\r\n            .catch(err => console.log(err)); \r\n    }\r\n\r\n    onChangeFirstName(e) {\r\n        this.setState({\r\n            firstName: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeLastName(e) {\r\n        this.setState({\r\n            lastName: e.target.value\r\n        })\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName\r\n        })\r\n\r\n        UserService.saveProfile(this.state.firstName, this.state.lastName)\r\n            .then(() => {\r\n                this.setState({\r\n                    isProfile: true\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { isProfile, history } = this.state;\r\n        console.log(history)\r\n        return (\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>Profile</h3>\r\n                </header>\r\n                {(isProfile ? (\r\n                    <div>\r\n                        <h3>First Name: </h3>\r\n                        {this.state.firstName} <br/>\r\n                        <h3>Last Name: </h3>\r\n                        {this.state.lastName}<br/>\r\n                        <Link to='/creditcard'>\r\n                            <Button>Add Credit Card</Button>\r\n                        </Link>\r\n                        \r\n                    </div>\r\n                ) : (\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Control \r\n                                        type=\"text\"\r\n                                        name=\"firstname\"\r\n                                        value={this.state.firstName}\r\n                                        onChange={this.onChangeFirstName}\r\n                                        placeholder=\"First name\" />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"lastname\"\r\n                                        value={this.state.lastName}\r\n                                        onChange={this.onChangeLastName}\r\n                                        placeholder=\"Last name\" />\r\n                                </Col>\r\n                            </Row><br/>\r\n                            <Button type='submit'>Upload Profile</Button>\r\n                        </Form>\r\n                    ))}\r\n\r\n                <div>\r\n                    <br></br>\r\n                    <h3>User History</h3>\r\n                    {\r\n                        this.state.history && (\r\n                            <ul>\r\n                                {\r\n                                    this.state.history.map(h => (\r\n                                    <li key={h.transactionId}>{h.transactionId} - Movie: <b>{h.filmName}</b> - Theatre: <b>{h.theatreName}</b> - Price: <b>{h.totalPrice}</b></li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        )\r\n                        \r\n                        \r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CreditCardInput from 'react-credit-card-input';\r\nimport { Form } from \"react-bootstrap\";\r\nimport UserService from '../Services/User_service';\r\n\r\nexport default class CreditCard extends Component {\r\n    \r\n    constructor(props) {\r\n        console.log(\"in con\")\r\n        super(props);\r\n        this.state ={\r\n            cardNumber: \"\",\r\n            expiry: \"\",\r\n            cvc: \"\",\r\n            message: \"\",\r\n            successful: false,\r\n            isloading: false\r\n        }\r\n\r\n        this.handleCardNumberChange = this.handleCardNumberChange.bind(this);\r\n        this.handleCardExpiryChange = this.handleCardExpiryChange.bind(this);\r\n        this.handleCardCVCChange = this.handleCardCVCChange.bind(this);\r\n        this.handleCardSubmit = this.handleCardSubmit.bind(this);\r\n    }\r\n\r\n    handleCardNumberChange(e) {\r\n        this.setState({\r\n            cardNumber: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCardExpiryChange(e) {\r\n        this.setState({\r\n            expiry: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCardCVCChange(e) {\r\n        this.setState({\r\n            cvc: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCardSubmit(e) {\r\n        e.preventDefault()\r\n        var number = parseInt(this.state.cardNumber.replace(/\\s/g, ''));\r\n        var eMon = parseInt(this.state.expiry.split(\"/\")[0]);\r\n        var eYear = parseInt(this.state.expiry.split(\"/\")[1]) + 2000;\r\n        var c = parseInt(this.state.cvc);\r\n        UserService.addPayment(number, eMon, eYear, c)\r\n            .then(res => {\r\n                this.setState({\r\n                    successful: true\r\n                })\r\n                \r\n                alert(\"Credit Card Successfully Added!\")\r\n                this.props.history.push(\"/\");\r\n                window.location.reload();\r\n            })\r\n            .catch(err => {\r\n                \r\n                // this.setState({\r\n                //     message: \"Your card number is incorrect\",\r\n                //     isloading: false\r\n                // })\r\n                alert(\"Incorrect Credit Card Info!\")\r\n                window.location.reload();\r\n            })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.cardNumber);\r\n        // console.log(this.state.expiry);\r\n        // console.log(this.state.cvc);\r\n        console.log(this.state.successful)\r\n        return(\r\n            <div>\r\n            <h3>Add Credit Card: </h3>\r\n            <Form onSubmit={this.handleCardSubmit}>\r\n            <CreditCardInput \r\n                cardNumberInputProps={{ value: this.state.cardNumber, onChange: this.handleCardNumberChange }}\r\n                cardExpiryInputProps={{ value: this.state.expiry, onChange: this.handleCardExpiryChange }}\r\n                cardCVCInputProps={{ value: this.state.cvc, onChange: this.handleCardCVCChange }}\r\n                fieldClassName=\"creditCardInput\"\r\n            />\r\n            <button><span>Submit</span></button>\r\n            </Form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport MovieService from \"../Services/Movie_service\";\r\n\r\n\r\nexport default class PaymentPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticket: [props.location.state.ticket],\r\n            movie: props.location.state.movie\r\n        }\r\n\r\n        this.handlePaying = this.handlePaying.bind(this);\r\n    }\r\n\r\n    handlePaying(e) {\r\n        MovieService.bookTickets(this.state.ticket, this.state.movie)\r\n            .then(res => {\r\n                alert(\"Booking Successful\");\r\n                this.props.history.push(\"/\");\r\n                window.location.reload();\r\n            })\r\n            .catch(err => {\r\n                alert(\"Transaction Failed. Need to add Credit Card Info.\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { ticket, movie } = this.state;\r\n        console.log(\"Credit Card: \" + localStorage.getItem(\"isCC\"))\r\n        console.log(movie);\r\n        console.log(ticket)\r\n        return(\r\n            <div>\r\n                <h2>Payment Page</h2>\r\n                <p>Movie: {movie.filmName}</p>\r\n                <p>Hall: {movie.hallName}</p>\r\n                <p>Date: {movie.filmDate}</p>\r\n                <p>Time: {movie.filmTiming}</p>\r\n                <p>Seat: {ticket[0].seatNumber}</p>\r\n                <p>Row: {ticket[0].rowIndex}</p>\r\n                <p>Price: {ticket[0].price}</p>\r\n                {\r\n                    (localStorage.getItem(\"isCC\") === null) ? (\r\n                        <div>\r\n                            <Button href='/profile'>Add Payment to buy ticket</Button>\r\n                        </div>\r\n                    ) : (\r\n                        <Button onClick={this.handlePaying}>Confirm</Button>\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { DropdownButton, Dropdown, Button } from 'react-bootstrap';\n\nimport MoviePage from \"./Components/MoviePage\";\nimport TheaterPage from \"./Components/TheaterPage\";\nimport MainPage from \"./Components/MainPage\";\nimport SignInPage from \"./Components/SignInPage\"\nimport RegisterPage from \"./Components/RegisterPage\"\nimport BookingPage from './Components/BookingPage';\nimport Profile from './Components/Profile';\nimport CreditCard from './Components/CreditCard';\n\nimport AuthService from './Services/Auth_service';\nimport MovieService from './Services/Movie_service';\nimport PaymentPage from './Components/PaymentPage';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: undefined,\n      theaters: undefined\n    }\n  }\n\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n    console.log(\"in componentdidmount\")\n    MovieService.getTheaters()\n      .then(res => {\n        this.setState({\n          theaters: res\n        })\n      });\n\n    if (user) {\n      this.setState({\n        currentUser: AuthService.getCurrentUser()\n      })\n    }\n\n  }\n\n\n  logOut() {\n    AuthService.logout();\n  }\n\n\n  render() {\n\n    console.log(this.state.currentUser);\n    return (\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              Best Movie Theater\n            </Link>\n            <div className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link to={\"/main\"} className=\"nav-link\">\n                  <Button >Home</Button>\n                </Link>\n              </li>\n              {/* <li className=\"nav-item\">\n                <Link to={\"/movies\"} className=\"nav-link\">\n                  <Button >Movies</Button>\n                </Link>\n              </li> */}\n              <li className=\"nav-item\">\n                <DropdownButton className=\"nav-button\" title=\"Our Theater\">\n                  {this.state.theaters &&\n                    this.state.theaters.map(theater => (\n                      <div key={theater.name}>\n                        <Dropdown.Item href={\"/theaters/\" + theater.theatreId}>\n                            {theater.name}\n                        </Dropdown.Item>\n\n                      </div>\n                    ))\n                  }\n                </DropdownButton>\n              </li>\n            </div>\n\n            {!this.state.currentUser ? (\n              <div className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    <Button >Login</Button>\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    <Button >Sign Up</Button>\n                  </Link>\n                </li>\n              </div>\n            ) : (\n                <div className=\"navbar-nav\">\n                  <li className=\"nav-item\">\n                    <Link to={\"/profile\"} className=\"nav-link\">\n                      <Button>Profile</Button>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a href='/login' className=\"nav-link\" onClick={this.logOut}>\n                      <Button >Log Out</Button>\n                    </a>\n                  </li>\n                </div>\n              )}\n          </nav>\n\n          <div className=\"container-routes\">\n            <Switch>\n              <Route exact path={[\"/\", \"/main\"]} render={() => <MainPage />} />\n              <Route exact path=\"/movies\" render={(props) => <MoviePage {... props}/>} />\n              <Route exact path=\"/theaters/:theatreId\" render={(props) => <TheaterPage {... props} />} />\n              <Route exact path=\"/register\" render={(props) => <RegisterPage {...props} />} />\n              <Route exact path=\"/login\" render={(props) => <SignInPage {...props} />} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/creditcard\" component={CreditCard}/>\n              <Route exact path=\"/bookingPage\" component={BookingPage} />\n              <Route exact path=\"/paymentPage\" component={PaymentPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}